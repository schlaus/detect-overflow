!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";function e(){const e=document.documentElement,n=e.scrollWidth>e.clientWidth,t=e.scrollHeight>e.clientHeight,o=[];if(n||t){const e=e=>{const n=e.getBoundingClientRect();(n.width>window.innerWidth||n.height>window.innerHeight||n.right>window.innerWidth||n.bottom>window.innerHeight)&&o.push(e)};document.querySelectorAll("body *").forEach((n=>{null!==n.offsetParent&&e(n)}))}return{hasOverflow:n||t,offendingElements:o}}let n=null,t=null;function o(){t&&(window.removeEventListener("resize",t),t=null),n&&(n.disconnect(),n=null)}function i(i={},l=null){o();const{includeResize:d=!0,includeMutations:s=!0,showAlert:c=!1,logToConsole:r=!0}=i,f=()=>{const n=e();if(n.hasOverflow&&(r&&console.warn("Overflow detected. Offending elements:",n.offendingElements),c)){const e=n.offendingElements.map((e=>`${e.tagName.toLowerCase()}${e.id?`#${e.id}`:""}${e.className?`.${e.className.toString().replace(/\s+/g,".")}`:""}`)).join("\n");alert(`Overflow detected.\nOffending elements:\n${e}`)}"function"==typeof l&&l(n)};d&&(t=f,window.addEventListener("resize",t)),s&&(n=new MutationObserver(f),n.observe(document.body,{childList:!0,attributes:!0,subtree:!0})),f()}i(),window.detectOverflow={watchOverflow:i,stopWatching:o,detectOverflow:e}}));
